name: tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.x' ]
        django-version: [ '3.0', '3.1', '3.2', '4.0', '4.1', '4.2' ]
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install 'poetry==1.6.1'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install dependencies
        run: |
          poetry install -E "docs test coverage lint"
          poetry run pip install DJANGO~=${{ matrix.django-version }}

      - name: Print python versions
        run: |
          python -V
          poetry run python -V

      - name: Lint with black . --check
        run: poetry run black . --check

      - name: Lint with ruff
        run: poetry run ruff .

      - name: Lint with mypy
        run: poetry run mypy .

      - name: Test with pytest
        run: poetry run py.test --cov=./ --cov-report=xml

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install "poetry==1.6.1"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Build package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: poetry build

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
